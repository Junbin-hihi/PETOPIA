<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="myPageMapper">

	<resultMap id="boardResultSet" type="board">
		<result column="board_no"	property="boardNo" />
		<result column="member_no" 	property="memberNo" />
		<result column="board_title" 	property="boardTitle" />
		<result column="board_content" 	property="boardContent" />
		<result column="create_date" 	property="createDate" />
		<result column="modify_date" 	property="modifyDate" />
		<result column="status" 	property="status" />
		<result column="category" 	property="category" />
		<result column="board_like" 	property="boardLike" />
		<result column="member_no" 	property="memberNo" />
		<result column="qna_yn" 	property="qnaYN" />
	</resultMap>
	
	<resultMap id="petResultSet" type="pet">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="GENDER" property="gender"/>
		<result column="SPECIES" property="species"/>
		<result column="PET_NAME" property="petName"/>
		<result column="AGE" property="age"/>
		<result column="WEIGHT" property="weight"/>
	</resultMap>
	
	<resultMap id="replyResultSet" type="reply">
		<result column="reply_no" 	property="replyNo" />
		<result column="board_no"	property="boardNo" />
		<result column="member_no" 	property="memberNo" />
		<result column="nickname" 	property="nickname" />
		<result column="reply_content" 	property="replyContent" />
		<result column="create_date" 	property="createDate" />
		<result column="category" 	property="category" />
		<result column="board_title" 	property="boardTitle" />
	</resultMap>
	
	<resultMap id="alramResultSet" type="alram">
		<result column="column_all"	property="columnAll" />
		<result column="date_all"	property="dateAll" />
		<result column="category"	property="category" />
		<result column="board_title"	property="boardTitle" />
		<result column="nickname"	property="nickname" />
		<result column="reply_content"	property="replyContent" />
		<result column="qna_yn" 	property="qnaYn" />
		<result column="coupon_name"	property="couponName" />
	</resultMap>
	
	<resultMap id="productReceiptResultSet" type="productReceipt">
		<result column="shipping_status"	property="shippingStatus" />
	</resultMap>
	
	<resultMap type="coupon" id="couponResultSet">
		<result column="COUPON_NO"   property="couponNo"/>
		<result column="COUPON_NAME" property="couponName"/>
		<result column="COUPON_TYPE" property="couponType"/>
		<result column="DISCOUNT" 	 property="discount"/>
		<result column="START_DATE"  property="startDate"/>
		<result column="END_DATE" 	 property="endDate"/>
		<result column="MAX_PRICE"   property="maxPrice"/>
		<result column="MIN_PRICE"   property="minPrice"/>
	</resultMap>
	
	<resultMap type="petpay" id="petpayResultSet">
		<result column="PETPAY_NO"   property="petpayNo"/>
		<result column="PETPAY_AMOUNT" property="petpayAmount"/>
		<result column="PETPAY_DATE" property="petpayDate"/>
		<result column="PETPAY_STATUS" 	 property="petpayStatus"/>
		<result column="MEMBER_NO"  property="memberNo"/>
		<result column="ACCOUNT"  property="account"/>
	</resultMap>
	
	<resultMap type="point" id="pointResultSet">
		<result column="POINT_NO"   property="pointNo"/>
		<result column="POINT_AMOUNT" property="pointAmount"/>
		<result column="POINT_DATE" property="pointDate"/>
		<result column="POINT_STATUS" 	 property="pointStatus"/>
		<result column="MEMBER_NO"  property="memberNo"/>
	</resultMap>
	
	<select id="myBoardList" parameterType="_int" resultMap="boardResultSet">
		select
		       board_title,
		       board_content,
		       create_date,
		       category
		  from 
		       board b
		  join
		       member m on(m.member_no = b.member_no)
		 where 
		       m.member_no = #{ memberNo }
		   and
		       b.status = 'Y'
		 order
		    by create_date desc
	</select>
	
	<select id="myReplyList" parameterType="_int" resultMap="replyResultSet">
		select
		       b.board_title,
		       r.reply_content,
		       r.create_date,
		       b.category
		  from 
		       board b
		  join
		       member m on(m.member_no = b.member_no)
		  join
		       reply r on(b.board_no = r.board_no)
		 where 
		       r.member_no = #{ memberNo }
		   and
		       b.status = 'Y'
		 order
		    by r.create_date desc
	</select>
	
	
	
	<select id="alramList" parameterType="_int" resultMap="alramResultSet">
		select column_all, date_all, category, board_title, nickname, reply_content
		  from 
		  (
		    select qna_yn as column_all, create_date as date_all, null as category, null as board_title, null as nickname, null as reply_content
		      from board
		     where category = 'QNA'
		       and qna_yn = 'Y'
		       and member_no = #{ memberNo }
		       
		    union all
		    
		    select CASE WHEN coupon_name = 'VIP 쿠폰' THEN 'VIP'
		                WHEN coupon_name = 'SILVER 쿠폰' THEN 'SILVER'
		                WHEN coupon_name = 'GOLD 쿠폰' THEN 'GOLD'
		                ELSE '이벤트'
		            END AS column_all, start_date date_all, null as category, null as board_title, null as nickname, null as reply_content
		      from coupon c
		      join member_coupon mc on(mc.coupon_no = c.coupon_no)
		     where member_no = #{ memberNo }
		       and member_coupon_status = 'Y'
		       
		    union all
		    
		    select s.shipping_status as column_all, p.receipt_date as date_all, null as category, null as board_title, null as nickname, null as reply_content
		      from product_receipt p
		      join shipping s on(s.shipping_no = p.shipping_no)
		     where member_no = #{ memberNo }
		     
		    union all
		    
		    select null as column_all, b.create_date as date_all, b.category as category, b.board_title as board_title, r.nickname as nickname, r.reply_content as reply_content
		      from member m
		      left join board b on(m.member_no = b.member_no)
		      left join reply r on(r.board_no = b.board_no)
		     where b.member_no = #{ memberNo }
		       and r.member_no != #{ memberNo }
		    )
		 order by date_all desc
	</select>
	
	<select id="alramShippingList" parameterType="_int" resultMap="productReceiptResultSet">
		select shipping_status
		  from product_receipt p
		  join shipping s on(s.shipping_no = p.shipping_no)
		   and member_no = #{ memberNo }
		 order by p.receipt_date desc
	</select>
	
	<select id="alramReplyList" parameterType="_int" resultMap="alramResultSet">
		select null as column_all, b.create_date as date_all, b.category as category, b.board_title as board_title, r.nickname as nickname, r.reply_content as reply_content
	      from member m
	      left join board b on(m.member_no = b.member_no)
	      left join reply r on(r.board_no = b.board_no)
	     where b.member_no = #{ memberNo }
	       and r.member_no != #{ memberNo }
	     order by b.create_date desc
	</select>
	
	<select id="alramNoticeList" parameterType="_int" resultMap="alramResultSet">
		select column_all, date_all
		  from
		  	   (
				select qna_yn as column_all, create_date as date_all
				  from board
				 where category = 'QNA'
				   and qna_yn = 'Y'
				   and member_no = #{ memberNo }
				union all
				select CASE WHEN coupon_name = 'VIP 쿠폰' THEN 'VIP'
				            WHEN coupon_name = 'SILVER 쿠폰' THEN 'SILVER'
				            WHEN coupon_name = 'GOLD 쿠폰' THEN 'GOLD'
				            ELSE '이벤트'
				        END AS column_all, start_date as date_all
				  from coupon c
				  join member_coupon mc on(mc.coupon_no = c.coupon_no)
				 where member_no = #{ memberNo }
				   and member_coupon_status = 'Y'
				)
		  order by date_all desc
	</select>
	
	<select id="selectPet" parameterType="int" resultMap="petResultSet">
		SELECT
				MEMBER_NO,
				GENDER,
				SPECIES,
				PET_NAME,
				AGE,
				WEIGHT
		  FROM
		  		PET
		 WHERE
		 		MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 예약결제 페이지에서 필요한 회원 쿠폰 정보  SELECT문 시작 -->
	
	<!-- 회원이 보유하고 있는 쿠폰 개수  -->
	<select id="selectMemberCouponCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) 
		FROM MEMBER_COUPON 
		JOIN COUPON ON (MEMBER_COUPON.COUPON_NO = COUPON.COUPON_NO)
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_COUPON_STATUS = 'Y'
		AND SYSDATE BETWEEN START_DATE AND END_DATE
	</select>
	
	<!--  회원이 보유하고 있는 쿠폰  List  -->
	<select id="selectMemberCouponList" parameterType="_int" resultMap="couponResultSet">
		SELECT 
				MEMBER_COUPON.COUPON_NO,
				COUPON.COUPON_NAME,
				COUPON.COUPON_TYPE,
				COUPON.DISCOUNT,
				COUPON.START_DATE,
				COUPON.END_DATE,
				COUPON.MAX_PRICE,
				COUPON.MIN_PRICE 
		FROM MEMBER_COUPON 
		JOIN COUPON ON (MEMBER_COUPON.COUPON_NO = COUPON.COUPON_NO)
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_COUPON_STATUS = 'Y'                  
		AND SYSDATE BETWEEN START_DATE AND END_DATE
	</select>
	
	<select id="selectMemberPoint" parameterType="_int" resultType="_int">
		SELECT NVL(SUM(POINT_AMOUNT),0)
		FROM POINT
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 예약결제 페이지에서 필요한 회원 쿠폰 및 적릭금 정보  SELECT문 끝 -->
	
	<!-- 마이페이지 펫페이, 포인트  -->
	<select id="selectMemberPetPay" parameterType="_int" resultType="_int">
		SELECT NVL(SUM(PETPAY_AMOUNT),0)
		FROM PETPAY
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectPetPayCount" parameterType="_int" resultType="_int">
		SELECT COUNT(PETPAY_NO)
		  FROM PETPAY
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectPointCount" parameterType="_int" resultType="_int">
		SELECT COUNT(POINT_NO)
		  FROM POINT
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<select id="myPetpayList" parameterType="_int" resultMap="petpayResultSet">
		SELECT PETPAY_DATE, PETPAY_STATUS , PETPAY_AMOUNT, CONCAT(BANK, ACCOUNT) AS ACCOUNT
		  FROM PETPAY
		  JOIN MEMBER USING(MEMBER_NO)
		 WHERE MEMBER_NO = #{memberNo}
	   	 ORDER BY PETPAY_DATE ASC
	</select>
	
	<select id="myPointList" parameterType="_int" resultMap="pointResultSet">
		SELECT POINT_DATE, POINT_STATUS, POINT_AMOUNT
		  FROM POINT
		 WHERE MEMBER_NO = #{memberNo}
		  ORDER BY POINT_DATE ASC
	</select>
	
	<!-- 회원이 발급 가능한 쿠폰 리스트 조회 -->
	<!-- 페이징 처리를 위한 쿠폰 리스트 조히 -->
	<select id="couponListCount" resultType="_int">
		SELECT COUNT(*)
		FROM COUPON
		WHERE SYSDATE BETWEEN START_DATE AND END_DATE
	</select>
	
	<!-- 쿠폰 리스트 -->
	<select id="memberCouponList" resultMap="couponResultSet">
		SELECT 
				COUPON_NO,
				COUPON_NAME,
				COUPON_TYPE,
				DISCOUNT,
				TO_CHAR(START_DATE, 'YYYY-MM-DD') START_DATE,
				TO_CHAR(END_DATE, 'YYYY-MM-DD') END_DATE,
				NVL(MAX_PRICE, 0) MAX_PRICE,
				NVL(MIN_PRICE, 0) MIN_PRICE
		 FROM 
				COUPON       
		 WHERE 
				SYSDATE BETWEEN START_DATE AND END_DATE
	</select>
	
	<!-- 회원 예약 결제 실적 조회 -->
	<select id="paymentPsrfomanceToReservation">
		
	</select>
	
	<!-- 회원 상품 결제 실적 조회 -->
	<select id="paymentPerfomanceToProduct" resultType="_int">
		SELECT SUM(PRODUCT_PRICE) 
 			 FROM(
               		SELECT
				            
				            AMOUNT* PRODUCT_PRICE PRODUCT_PRICE1,
				                CASE 
				                WHEN PR.COUPON_NO !=0 AND C.COUPON_TYPE = 1
				                THEN AMOUNT* PRODUCT_PRICE - POINT - C.DISCOUNT
				                WHEN PR.COUPON_NO !=0 AND C.COUPON_TYPE = 2
				                THEN AMOUNT* PRODUCT_PRICE * ((100-C.DISCOUNT)/100) - POINT
				                ELSE  AMOUNT* PRODUCT_PRICE- POINT
				                END PRODUCT_PRICE ,
				                PR.RECEIPT_NO,
				                PR.MEMBER_NO,
				                RECEIPT_DATE,
				                NVL(PR.COUPON_NO,0) COUPON_NO,
				                NVL(POINT,0) POINT,
				                SHIPPING_NO
				          FROM 
				                PRODUCT_BRIDGE PB JOIN 
				                ( SELECT
				                            RECEIPT_NO,
				                            MEMBER_NO,
				                            RECEIPT_DATE,
				                            NVL(COUPON_NO,0) COUPON_NO,
				                            NVL(POINT,0) POINT,
				                            SHIPPING_NO
				                  FROM PRODUCT_RECEIPT ) PR ON(pb.receipt_no  = PR.receipt_no)
				                JOIN PRODUCT P ON(P.PRODUCT_NO = PB.PRODUCT_NO)
				                LEFT JOIN COUPON C ON(C.COUPON_NO = PR.COUPON_NO
				    )
        WHERE 
                RECEIPT_DATE BETWEEN 
                TRUNC(SYSDATE, 'MM') AND LAST_DAY(TRUNC(SYSDATE))) 
         AND 
         		 MEMBER_NO = #{memberNo}
	</select>
	
	<select id="paymentPerfomanceToReservation" resultType="_int">
		SELECT SUM(RESULT) 
		  FROM (
	            SELECT 
	                    MEMBER_NO,
	                    RR.RESERVATION_NO,
	                    RESERVATION_FEE,
	                    
	                    CASE 
	                            WHEN RR.COUPON_NO !=0 AND C.COUPON_TYPE = 1
	                            THEN RESERVATION_FEE - C.DISCOUNT - POINT 
	                            WHEN RR.COUPON_NO !=0 AND C.COUPON_TYPE = 2
	                            THEN  RESERVATION_FEE * ((100-C.DISCOUNT)/100) - POINT
	                            ELSE  RESERVATION_FEE - POINT
	                            END RESULT ,
	                            RR.POINT,
	                            RR.COUPON_NO
	              FROM
	                    RESERVATION R 
	              JOIN (
	                    SELECT
	                            RESERVATION_NO,
	                            RECEIPT_DATE,
	                            NVL(COUPON_NO,0) COUPON_NO,
	                            NVL(POINT,0) POINT
	                    FROM 
	                            RESERVATION_RECEIPT
	                    WHERE 
	                            RECEIPT_STATUS='Y') RR ON (RR.RESERVATION_NO = R.RESERVATION_NO)
			  LEFT JOIN COUPON C ON(C.COUPON_NO = RR.COUPON_NO)
			  WHERE
			          MEMBER_NO =  #{memberNo}
			    AND 
			     	 TO_CHAR(RECEIPT_DATE) BETWEEN TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1))
						AND TO_CHAR(TRUNC (LAST_DAY( ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1)))))
	</select>
	
	<!-- 펫페이, 포인트 -->
	<select id="petpayStatusList" parameterType="hashmap" resultMap="petpayResultSet">
		SELECT PETPAY_DATE, PETPAY_STATUS , PETPAY_AMOUNT, CONCAT(BANK, ACCOUNT) AS ACCOUNT
		  FROM PETPAY
		  JOIN MEMBER USING(MEMBER_NO)
		 WHERE MEMBER_NO = #{memberNo}
		 <choose>
	   	  	<when test="status == 'PLUS'">
	   	  		AND PETPAY_STATUS = 'P'
	   	  		ORDER BY PETPAY_DATE DESC
	   	  	</when>
	   	  	<when test="status == 'MINUS'">
	   	  		AND PETPAY_STATUS = 'M'
	   	  		ORDER BY PETPAY_DATE DESC
	   	  	</when>
	   	  	<otherwise>
	   	  	   ORDER BY PETPAY_DATE DESC
	   	  	</otherwise>
	   	 </choose>
	</select>
	
	<select id="pointStatusList" parameterType="hashmap" resultMap="pointResultSet">
		SELECT POINT_DATE, POINT_STATUS, POINT_AMOUNT
		  FROM POINT
		 WHERE MEMBER_NO = #{memberNo}
		 <choose>
	   	  	<when test="status == 'PLUS'">
	   	  		AND POINT_STATUS = 'P'
	   	  		ORDER BY POINT_DATE DESC
	   	  	</when>
	   	  	<when test="status == 'MINUS'">
	   	  		AND POINT_STATUS = 'M'
	   	  		ORDER BY POINT_DATE DESC
	   	  	</when>
	   	  	<otherwise>
	   	  	   ORDER BY POINT_DATE DESC
	   	  	</otherwise>
	   	 </choose>
	</select>
	
</mapper>