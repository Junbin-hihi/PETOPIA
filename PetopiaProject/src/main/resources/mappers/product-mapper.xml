<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="productMapper">
	
	<resultMap type="product" id="productResultSet">
		<result column="product_no" property="productNo" />
		<result column="product_status" property="productStatus" />
		<result column="product_title" property="productTitle" />
		<result column="product_price" property="productPrice" />
		<result column="product_date" property="productDate" />
		<result column="category_name" property="categoryName" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="file_path" property="filePath" />
	</resultMap>
	
	<resultMap type="att" id="attResultSet">
		<result column="file_no" property="fileNo" />
		<result column="file_category" property="fileCategory" />
		<result column="ref_no" property="refNo" />
		<result column="file_level" property="fileLevel" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="file_path" property="filePath" />
		<result column="file_status" property="fileStatus" />
	</resultMap>
	
	<select id="selectProductList" resultMap="productResultSet">
		select 
		       product_no, 
		       product_status, 
		       product_title, 
		       product_price, 
		       product_date, 
		       category_name,
               origin_name,
               change_name,
               file_path
		  from 
		       product 
     left join 
               attachment on(product_no = ref_no)
		 where 
		       file_category = 1 
		   and 
		       file_level = 0
		  <choose>
		  	<when test="category.equals('clothes')">
		  		and category_name = '애견의류'
		  	</when>
		  	<when test="category.equals('goods')">
		  		and category_name = '애견용품'
		  	</when>
		  	<when test="category.equals('food')">
		  		and category_name = '애견식품'
		  	</when>
		  	<otherwise>
		  		
		  	</otherwise>
		  </choose>
         order 
            by 
               product_date desc
	</select>
	
	<!-- 상품 상세 insert문 -->
	<insert id="insertProduct" parameterType="product">
		insert 
		  into 
		       product
		              (
		               product_no, 
		               product_title, 
		               product_price,
		               category_name
		               ) 
		         values
		               (
		               SEQ_PRODUCT_NO.NEXTVAL,
		               #{productTitle},
		               #{productPrice},
		               #{categoryName}
		               )
	</insert>
	
	<insert id="insertProductSize" parameterType="product">
		insert all 
			<if test='!smallSize.equals("")'>
				into product_size (product_no, product_size, extra_money) 
				values(SEQ_PRODUCT_NO.CURRVAL, 'S', 0)
			</if>
			<if test='!mediumSize.equals("")'>
				into product_size (product_no, product_size, extra_money) 
				values(SEQ_PRODUCT_NO.CURRVAL, 'M', 2000)
			</if>
			<if test='!largeSize.equals("")'>
				into product_size (product_no, product_size, extra_money) 
				values(SEQ_PRODUCT_NO.CURRVAL, 'L', 4000)
			</if>
		select * from dual
	</insert>
	<!-- 상품 이미지 insert문 -->
	<insert id="insertThumbnailImgProduct" parameterType="att">
		insert 
		  into 
		       Attachment 
		              (
		               file_no, 
		               file_category,
		               ref_no,
		               file_level,
		               origin_name,
		               change_name,
		               file_path
		               ) 
		         values
		               (
		               SEQ_FNO.NEXTVAL,
		               1,
		               SEQ_PRODUCT_NO.CURRVAL,
		               0,
		               #{originName},
		               #{changeName},
		               #{filePath}
		               )
	</insert>
	
	<insert id="insertDetailImgProduct" parameterType="att">
		insert 
		  into 
		       Attachment 
		              (
		               file_no, 
		               file_category,
		               ref_no,
		               file_level,
		               origin_name,
		               change_name,
		               file_path
		               ) 
		         values
		               (
		               SEQ_FNO.NEXTVAL,
		               1,
		               SEQ_PRODUCT_NO.CURRVAL,
		               1,
		               #{originName},
		               #{changeName},
		               #{filePath}
		               )
	</insert>
	
	<select id="selectDetail" parameterType="_int" resultMap="productResultSet">
		select 
		       product_title, 
			   product_price, 
			   product_date, 
			   category_name,
			   origin_name,
			   change_name,
			   file_path
		  from 
		       product 
	 left join 
	           attachment on(product_no = ref_no) 
		 where 
		       product_status = 'Y' 
		   and 
		       product_no = #{bno} 
		   and 
		       file_category = 1 
		   and 
		       file_level = 0
	</select>
	
	<select id="selectDetailPage" parameterType="_int" resultMap="productResultSet">
		select 
			   product_no,
		       product_title, 
			   product_price, 
			   product_date, 
			   category_name,
			   origin_name,
			   change_name,
			   file_path 
		  from 
		       product 
	 left join 
	           attachment on(product_no = ref_no) 
		 where 
		       product_status = 'Y' 
		   and 
		       product_no = #{bno} 
		   and 
		       file_category = 1 
		   and 
		       file_level = 1
	</select>
	
	<select id="productSelectSize" parameterType="_int" resultType="product">
		select 
		       product_no productNo,
		       extra_money extraMoney,
		       product_size productSize
		  from 
		       product_size 
		 where 
		       product_no = #{bno} 
	</select>
	<!-- 
	<insert id="productBuyInsert" parameterType="productReceipt">
		insert into product_bridge values(SEQ_PRODUCT) 
RECEIPT_NO
PRODUCT_NO
AMOUNT
PRODUCT_SIZE
STATUS
	</insert>
	 -->
	 
	<insert id="insertCart" parameterType="cart">
		insert 
		  into 
		       product_cart 
		       (
		       member_no,
		       product_no,
		       amount,
		       product_size,
		       cart_no,
		       cart_title,
		       cart_price,
		       extra_money
		       )
		values(
		       #{memberNo},
		       #{productNo},
		       #{amount},
		       <choose>
			   		<when test="productSize == null">
			   			' ',
			   		</when>
			   		<otherwise>
				       #{productSize},
			   		</otherwise>		       
		       </choose>
		       SEQ_CART_NO.NEXTVAL,
		       #{cartTitle},
		       #{cartPrice},
		       #{extraMoney}
		       ) 
	</insert>
	
	<select id="selectCart" parameterType="_int" resultType="cart">
		select 
			   cart_no cartNo,
			   member_no memberNo, 
	           product_no productNo, 
	           amount amount, 
			   product_size productSize,
			   cart_title cartTitle,
			   (cart_price * amount) cartPrice,
			   (extra_money * amount) extraMoney
		  from 
			   product_cart 
	     where 
	           member_no = #{memberNo}
	</select>
	
	<select id="selectCoupon" parameterType="_int" resultType="coupon">
		 select 
				coupon_no couponNo, 
				coupon_name couponName, 
				coupon_type couponType, 
				discount discount, 
				SUBSTR(TO_CHAR(START_DATE, 'YYYY-MM-DD'), 1, 10)  startDate,
				SUBSTR(TO_CHAR(END_DATE, 'YYYY-MM-DD'), 1, 10)  endDate,
				max_price maxPrice,
				min_price minPrice
		   from 
		        coupon 
	  left join 
	            member_coupon using(coupon_no) 
		   join 
		        member using(member_no)
		  where 
		        member_no = #{memNo} and member_coupon_status = 'Y'
	</select>
	
</mapper>